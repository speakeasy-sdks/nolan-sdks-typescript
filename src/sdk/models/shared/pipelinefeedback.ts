/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FeedbackSearchResult } from "./feedbacksearchresult";
import { Tag } from "./tag";
import { Expose, Transform, Type } from "class-transformer";

export class PipelineFeedback extends SpeakeasyBase {
  /**
   * Datetime object, specifies when the feedback was created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * Unique identifier of the feedback
   */
  @SpeakeasyMetadata()
  @Expose({ name: "feedback_id" })
  feedbackId: string;

  /**
   * Feedback if the answer was correct
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_correct_answer" })
  isCorrectAnswer: boolean;

  /**
   * Feedback if the document was matched correctly
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_correct_document" })
  isCorrectDocument: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "search_result" })
  @Type(() => FeedbackSearchResult)
  searchResult: FeedbackSearchResult;

  /**
   * A list of tags associated with the feedback.
   */
  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags: Tag[];
}
