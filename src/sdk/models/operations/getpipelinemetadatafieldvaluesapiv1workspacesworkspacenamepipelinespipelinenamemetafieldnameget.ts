/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetPipelineMetadataFieldValuesApiV1WorkspacesWorkspaceNamePipelinesPipelineNameMetaFieldNameGetSecurity extends SpeakeasyBase {
    @SpeakeasyMetadata({
        data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
    })
    httpBearer: string;
}

export class GetPipelineMetadataFieldValuesApiV1WorkspacesWorkspaceNamePipelinesPipelineNameMetaFieldNameGetRequest extends SpeakeasyBase {
    /**
     * Enter the offset for the pagination. Note that the results are 0-indexed which means that with 'after=0', you will skip the first element.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=after" })
    after?: number;

    /**
     * The name of the field to search in.
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=field_name" })
    fieldName: string;

    /**
     * How many entries do you want to display?
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
    limit?: number;

    /**
     * The name of the pipeline whose files you want to display.
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=pipeline_name" })
    pipelineName: string;

    /**
     * The query you want to use to search through metadata. You can use wildcards in the query, for example, '*query*' to list all values which contain the term 'query'.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=query" })
    query?: string;

    /**
     * Type the name of the workspace.
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=workspace_name" })
    workspaceName: string;
}

export class GetPipelineMetadataFieldValuesApiV1WorkspacesWorkspaceNamePipelinesPipelineNameMetaFieldNameGetResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * Validation Error
     */
    @SpeakeasyMetadata()
    httpValidationError?: shared.HTTPValidationError;

    /**
     * Metadata for the pipeline's index.
     */
    @SpeakeasyMetadata()
    pipelineFieldSearchResult?: shared.PipelineFieldSearchResult;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;
}
