/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class UpdateUserPermissionApiV1UsersUserIdPatchSecurity extends SpeakeasyBase {
    @SpeakeasyMetadata({
        data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
    })
    httpBearer: string;
}

/**
 * Specify the new role for the user.
 */
export class UpdateUserPermissionApiV1UsersUserIdPatchUserRole extends SpeakeasyBase {
    /**
     * An enumeration.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "role" })
    role: shared.RolesToDB;
}

export class UpdateUserPermissionApiV1UsersUserIdPatchRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    requestBody: UpdateUserPermissionApiV1UsersUserIdPatchUserRole;

    /**
     * A unique identifier of the user. You can obtain it by running the Get Users endpoint.
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=user_id" })
    userId: string;
}

export class UpdateUserPermissionApiV1UsersUserIdPatchResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * Validation Error
     */
    @SpeakeasyMetadata()
    httpValidationError?: shared.HTTPValidationError;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;
}
