/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ListEvaluationSetsApiV1WorkspacesWorkspaceNameEvaluationSetsGetSecurity extends SpeakeasyBase {
    @SpeakeasyMetadata({
        data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
    })
    httpBearer: string;
}

export class ListEvaluationSetsApiV1WorkspacesWorkspaceNameEvaluationSetsGetRequest extends SpeakeasyBase {
    /**
     * Enter an ID if you want to see all entries after this ID.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=after" })
    after?: string;

    /**
     * Enter an ID if you want to see all entries before this ID.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=before" })
    before?: string;

    /**
     * How many entries do you want to display? Leaving this field empty keeps the default and max 10 results are returned.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
    limit?: number;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=name" })
    name?: string;

    /**
     * Which page do you want to see? Type the number.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page_number" })
    pageNumber?: number;

    /**
     * Type the name of the workspace.
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=workspace_name" })
    workspaceName: string;
}

export class ListEvaluationSetsApiV1WorkspacesWorkspaceNameEvaluationSetsGetResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * Successful Response
     */
    @SpeakeasyMetadata()
    evaluationSetPagination?: shared.EvaluationSetPagination;

    /**
     * Validation Error
     */
    @SpeakeasyMetadata()
    httpValidationError?: shared.HTTPValidationError;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;
}
